{"ast":null,"code":"export const initialState = {\n  cart: [],\n  user: null\n};\nexport const getCartTotal = cart => cart === null || cart === void 0 ? void 0 : cart.reduce((amount, item) => item.price + amount, 0);\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user\n      };\n    case \"ADD_TO_CART\":\n      // Logic for adding item to cart\n      return {\n        ...state,\n        cart: [...state.cart, action.item]\n      };\n    case \"REMOVE_FROM_CART\":\n      //Logic for removing item from cart\n\n      //   cloned the cart\n      let newCart = [...state.cart];\n      const index = state.cart.findIndex(cartItem => cartItem.id === action.id);\n      if (index >= 0) {\n        //item consist in cart... remove it!\n        newCart.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product (id: ${action.id}) as its not in the cart`);\n      }\n      return {\n        ...state,\n        cart: newCart\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","cart","user","getCartTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newCart","index","findIndex","cartItem","id","splice","warn"],"sources":["C:/Mihir Bhavsar/Java Script/Amazon Clone/amazon-clone/src/reducer.js"],"sourcesContent":["export const initialState = {\r\n  cart: [],\r\n  user: null,\r\n};\r\n\r\nexport const getCartTotal = (cart) =>\r\n  cart?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"ADD_TO_CART\":\r\n      // Logic for adding item to cart\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, action.item],\r\n      };\r\n    case \"REMOVE_FROM_CART\":\r\n      //Logic for removing item from cart\r\n\r\n      //   cloned the cart\r\n      let newCart = [...state.cart];\r\n\r\n      const index = state.cart.findIndex(\r\n        (cartItem) => cartItem.id === action.id\r\n      );\r\n\r\n      if (index >= 0) {\r\n        //item consist in cart... remove it!\r\n        newCart.splice(index, 1);\r\n      } else {\r\n        console.warn(\r\n          `Can't remove product (id: ${action.id}) as its not in the cart`\r\n        );\r\n      }\r\n\r\n      return { ...state, cart: newCart };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,IAAI,EAAE,EAAE;EACRC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIF,IAAI,IAC/BA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,KAAKA,IAAI,CAACC,KAAK,GAAGF,MAAM,EAAE,CAAC,CAAC;AAExD,MAAMG,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,QAAQA,MAAM,CAACG,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGJ,KAAK;QACRP,IAAI,EAAEQ,MAAM,CAACR;MACf,CAAC;IAEH,KAAK,aAAa;MAChB;MACA,OAAO;QACL,GAAGO,KAAK;QACRR,IAAI,EAAE,CAAC,GAAGQ,KAAK,CAACR,IAAI,EAAES,MAAM,CAACJ,IAAI;MACnC,CAAC;IACH,KAAK,kBAAkB;MACrB;;MAEA;MACA,IAAIQ,OAAO,GAAG,CAAC,GAAGL,KAAK,CAACR,IAAI,CAAC;MAE7B,MAAMc,KAAK,GAAGN,KAAK,CAACR,IAAI,CAACe,SAAS,CAC/BC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKR,MAAM,CAACQ,EACvC,CAAC;MAED,IAAIH,KAAK,IAAI,CAAC,EAAE;QACd;QACAD,OAAO,CAACK,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLJ,OAAO,CAACS,IAAI,CACT,6BAA4BV,MAAM,CAACQ,EAAG,0BACzC,CAAC;MACH;MAEA,OAAO;QAAE,GAAGT,KAAK;QAAER,IAAI,EAAEa;MAAQ,CAAC;IACpC;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}